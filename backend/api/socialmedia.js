const express = require('express');
const SocialPost = require('../models/socialpost');
const Cafe = require('../models/cafe');
const { auth } = require('../utils/authmiddleware');
const axios = require('axios');

const router = express.Router();

// Get all posts for current cafe
router.get('/posts', auth, async (req, res) => {
  try {
    const cafe = await Cafe.findOne({ user: req.user.id });
    if (!cafe) {
      return res.status(404).json({ msg: 'Cafe profile not found' });
    }

    const posts = await SocialPost.find({ cafe: cafe._id }).sort({ scheduledDate: 1 });
    res.json(posts);
  } catch (error) {
    console.error(error.message);
    res.status(500).send('Server error');
  }
});

// Generate AI content for a post
router.post('/generate-content', auth, async (req, res) => {
  const { postId, topic, platform } = req.body;

  try {
    const cafe = await Cafe.findOne({ user: req.user.id });
    if (!cafe) {
      return res.status(404).json({ msg: 'Cafe profile not found' });
    }

    let post;
    if (postId) {
      post = await SocialPost.findOne({ _id: postId, cafe: cafe._id });
      if (!post) {
        return res.status(404).json({ msg: 'Post not found' });
      }
    } else {
      post = new SocialPost({
        cafe: cafe._id,
        platform: platform || 'instagram',
        status: 'pending'
      });
    }

    // Mock AI content generation (in a real app, this would call an AI API)
    const aiContent = await generateAIContent(cafe.name, topic);
    
    post.content = aiContent.text;
    post.imageUrl = aiContent.imageUrl;
    post.status = 'ready';
    
    await post.save();
    res.json(post);
  } catch (error) {
    console.error(error.message);
    res.status(500).send('Server error');
  }
});

// Schedule a post
router.post('/schedule', auth, async (req, res) => {
  const { postId, scheduledDate } = req.body;

  try {
    const cafe = await Cafe.findOne({ user: req.user.id });
    if (!cafe) {
      return res.status(404).json({ msg: 'Cafe profile not found' });
    }

    const post = await SocialPost.findOne({ _id: postId, cafe: cafe._id });
    if (!post) {
      return res.status(404).json({ msg: 'Post not found' });
    }

    post.scheduledDate = new Date(scheduledDate);
    post.status = 'scheduled';
    
    await post.save();
    res.json(post);
  } catch (error) {
    console.error(error.message);
    res.status(500).send('Server error');
  }
});

// Mock function to generate AI content
async function generateAIContent(cafeName, topic) {
  // In a real app, this would call an AI API like OpenAI
  
  const topics = {
    default: `Visit ${cafeName} today for the best coffee experience!`,
    special: `Weekend special at ${cafeName}! Buy one get one free on all pastries.`,
    coffee: `Introducing our new signature blend at ${cafeName}. A perfect balance of flavor and aroma.`,
    event: `Join us this Friday at ${cafeName} for live music and specialty drinks!`
  };
  
  const content = topics[topic] || topics.default;
  
  // Mock image URL (in a real app, this would be generated by an AI service)
  const imageUrl = `https://source.unsplash.com/random/1080x1080/?cafe,coffee`;
  
  // Simulate API delay
  await new Promise(resolve => setTimeout(resolve, 1000));
  
  return {
    text: content,
    imageUrl
  };
}

module.exports = router;